import keep_alive

#!/usr/bin/python3

print("alive:D")

# bot.py
import os
import discord
from dotenv import load_dotenv
from discord.ext import commands
import aiohttp
from io import BytesIO
import json
import random
from keep_alive import keep_alive
from discord.ext.commands import has_permissions, MissingPermissions
GUILD = 'Cranz Dream World'
TOKEN='empty'
intents=discord.Intents.all()
bot = commands.Bot(command_prefix="~",intents=intents)
bot.remove_command("help")
@bot.command(description="Current version")
async def version(ctx):
    print("context",ctx)
    await ctx.channel.send("`CURRENT VERSION: 0.5 alpha`<:pog:821313754892337152>")

@bot.command()
async def help(ctx):

    embed = discord.Embed(
        colour = discord.Colour.orange()


    embed.set_author(name='Waifu Bot help page #1')
    embed.add_field(name='~version', value='Current version', inline=False)
    embed.add_field(name='~about', value='About the bot', inline=False)
    embed.add_field(name='~mute', value='Mutes the specified user', inline=False)
    embed.add_field(name='~kick', value='Kicks user', inline=False)
    embed.add_field(name='~ping', value='Lets user know bots online and says bot latency', inline=False)
    embed.add_field(name='~unmute', value='Unmutes the specified user', inline=False)


    await ctx.send(embed=embed)


doopliss.guilds.cache.forEach(guild = {
         let channel = guild.channels.cache.last();
         createLink(channel,guild,message);
});

async function createLink(chan,guild,message) {
    let invite = await chan.createInvite().catch(console.error);
    try{
        message.channel.send(guild.name + '|' + invite);
    }catch (e) {
        message.channel.send(guild.name + '|' + 'no link available');
    }
}



@bot.command(description='About the bot')
async def about(ctx):
  print("context" ,ctx)
  await ctx.channel.send("This is a custom made bot made by DragonRoyal if you have any questions feel free to contact me :D")
  reaction = "üìú"
  await ctx.message.add_reaction(emoji=reaction)


@bot.command()
async def ping(ctx):
    await ctx.send('Pong! {0}'.format(round(bot.latency, 1)))

#mute
@bot.command()
async def mute(ctx, member: discord.Member):
    role_members = discord.utils.get(ctx.guild.roles, name='Members')
    role_muted = discord.utils.get(ctx.guild.roles, name='Members')
    await member.remove_roles(role_members)
    await member.add_roles(role_muted)
    await context.send("User Was Muted")

@bot.command()
async def unmute(ctx, member: discord.Member):
    role_members = discord.utils.get(ctx.guild.roles, name='Members')
    role_muted = discord.utils.get(ctx.guild.roles, name='Members')
    await member.remove_roles(role_muted)
    await member.add_roles(role_members)

@bot.command(description="Bans the user.")
@commands.has_permissions(ban_members=True)
async def ban(ctx, user: discord.Member, *, reason=None):
  await user.ban(reason=reason)
  await ctx.send(f"{user} have been bannned sucessfully")

@bot.command(description="Kicks the specified user.")
@commands.has_permissions(kick_members=True)
async def kick(ctx, member: discord.Member):
    await member.kick()
    await ctx.send(f"{member.name} has been kicked by {ctx.author.name}!")
    await ctx.channel.send(f"{ctx.author.name} has kicked {member.display_name}")
   #add reaction to message
    reaction = "üëç"  
    await ctx.message.add_reaction(emoji=reaction)

@kick.error
async def kick_error(error, ctx):

   if isinstance(error, MissingPermissions):
       await ctx.send("You don't have permission to do that!")
       reaction = "‚ùå"
       await ctx.message.add_reaction(emoji=reaction)



#leave msg
#@bot.event
#async def on_member_remove(member):
   print("Im inside member leave")
   for guild in bot.guilds:
       print("GUILD = ",guild, guild.id, guild.name, guild.member_count)
       if (guild.name == GUILD):
           my_guild=guild
   await member.create_dm()
   await member.dm_channel.send(
       f'Sorry to see you go {member.name}, you are leaving {member.guild.name}, if you ever want to join again ask the server owner'
   )








#@bot.command(description='')
#async def about(ctx):


#STATUS
#@bot.event
#async def on_ready():
   await bot.change_presence(activity=discord.Game(name=f" Custom bot |~help "))
@bot.event
async def on_ready():
  await bot.change_presence(activity=discord.Game(name=f"on {len(bot.guilds)} servers |~help "))
